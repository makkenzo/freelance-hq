name: Deploy to Production

on:
    push:
        branches:
            - main

jobs:
    build-and-push:
        name: Build and Push to Docker Hub
        runs-on: ubuntu-latest
        permissions:
            contents: read

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ secrets.DOCKERHUB_USERNAME }}/freelance-hq

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy:
        name: Deploy to VPS
        runs-on: ubuntu-latest
        needs: build-and-push

        environment:
            name: production

        steps:
            - name: Deploy to Server via SSH
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script_stop: true
                  script: |
                      cd ~/work/freelance-hq/
                      echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
                      docker pull ${{ secrets.DOCKERHUB_USERNAME }}/freelance-hq:latest

                      echo "==> Restarting container..."
                      docker compose up -d

                      echo "==> Cleaning up old images..."
                      docker image prune -af
